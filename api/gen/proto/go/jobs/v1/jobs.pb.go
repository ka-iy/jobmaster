// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: jobs.proto

package jobsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JobState is an enum which defines the states a job could be in.
type JobState int32

const (
	JobState_JOBSTATE_UNSPECIFIED       JobState = 0
	JobState_JOBSTATE_RUNNING           JobState = 1
	JobState_JOBSTATE_TERMINATED_BY_API JobState = 2
	JobState_JOBSTATE_COMPLETED         JobState = 3
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "JOBSTATE_UNSPECIFIED",
		1: "JOBSTATE_RUNNING",
		2: "JOBSTATE_TERMINATED_BY_API",
		3: "JOBSTATE_COMPLETED",
	}
	JobState_value = map[string]int32{
		"JOBSTATE_UNSPECIFIED":       0,
		"JOBSTATE_RUNNING":           1,
		"JOBSTATE_TERMINATED_BY_API": 2,
		"JOBSTATE_COMPLETED":         3,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_jobs_proto_enumTypes[0].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_jobs_proto_enumTypes[0]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{0}
}

// JobID is a message which contains the ID of the job of interest.
// Job IDs are automatically assigned to every submitted job.
// The JOB ID is a KSUID (K-Searchable Unique Identifier).
// See: https://segment.com/blog/a-brief-history-of-the-uuid/
// This message is used in requests as well as responses.
type JobID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *JobID) Reset() {
	*x = JobID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobID) ProtoMessage() {}

func (x *JobID) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobID.ProtoReflect.Descriptor instead.
func (*JobID) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *JobID) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

// //////////////////// Request messages //////////////////////
// JobCreateRequest is a request used to request the creation of a job on the server.
type JobCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// command is the command to be run on the job server.
	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	// args is the (optional) list of commandline arguments for the command to be run.
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *JobCreateRequest) Reset() {
	*x = JobCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateRequest) ProtoMessage() {}

func (x *JobCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateRequest.ProtoReflect.Descriptor instead.
func (*JobCreateRequest) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{1}
}

func (x *JobCreateRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *JobCreateRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

// JobIDRequest is a request message containing the ID of the job of interest.
// It is used in the RPCs which request job stop, status, and streaming.
type JobIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIDRequest *JobID `protobuf:"bytes,1,opt,name=jobIDRequest,proto3" json:"jobIDRequest,omitempty"`
}

func (x *JobIDRequest) Reset() {
	*x = JobIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIDRequest) ProtoMessage() {}

func (x *JobIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIDRequest.ProtoReflect.Descriptor instead.
func (*JobIDRequest) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{2}
}

func (x *JobIDRequest) GetJobIDRequest() *JobID {
	if x != nil {
		return x.JobIDRequest
	}
	return nil
}

// //////////////////// Response Messages //////////////////////
// JobResponse is a response message containing the status/details of a particular job.
type JobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JobID is the ID of this particular job. A job ID is a server-assigned KSUID.
	JobIDResponse *JobID `protobuf:"bytes,1,opt,name=jobIDResponse,proto3" json:"jobIDResponse,omitempty"`
	// jobMsg is a status message from the Job service framework.
	// It can contain informational messages or framework-related errors.
	// Note that this is not a status message from the output of the job.
	JobMsg string `protobuf:"bytes,2,opt,name=jobMsg,proto3" json:"jobMsg,omitempty"`
	// client is the the name of the client/user who started the job.
	Client string `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	// pid is the process ID of the job. If the job failed to start, this will
	// be negative.
	Pid int32 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	// state is the current execution state of this job.
	State JobState `protobuf:"varint,5,opt,name=state,proto3,enum=jobmaster.jobs.v1.JobState" json:"state,omitempty"`
	// exitCode is the exit code from the process associated with this job.
	// Any value here is only valid if the job state is in one of the terminated states.
	// -1 indicates that the job was terminated by a signal, in which case the
	// associated signal will be present as a string in signalStr.
	ExitCode int32 `protobuf:"zigzag32,6,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	// signalStr is the string representation of the termination signal received,
	// if any, by the process associated with this job.
	SignalStr string `protobuf:"bytes,7,opt,name=signalStr,proto3" json:"signalStr,omitempty"`
	// cmd is the actual commandline (with arguments, if any) of the command which
	// was used when creating a job.
	Cmd *JobCreateRequest `protobuf:"bytes,8,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// started is the starting time of the job, as a Unix epoch timestamp.
	// The epoch timestamp is UTC-based and has nanosecond resolution.
	Started *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started,proto3" json:"started,omitempty"`
	// ended is the end time of the job, as a Unix epoch timestamp.
	// The epoch timestamp is UTC-based and has nanosecond resolution.
	// Will be nil if the job is still running.
	Ended *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=ended,proto3" json:"ended,omitempty"`
}

func (x *JobResponse) Reset() {
	*x = JobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResponse) ProtoMessage() {}

func (x *JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResponse.ProtoReflect.Descriptor instead.
func (*JobResponse) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{3}
}

func (x *JobResponse) GetJobIDResponse() *JobID {
	if x != nil {
		return x.JobIDResponse
	}
	return nil
}

func (x *JobResponse) GetJobMsg() string {
	if x != nil {
		return x.JobMsg
	}
	return ""
}

func (x *JobResponse) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *JobResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *JobResponse) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_JOBSTATE_UNSPECIFIED
}

func (x *JobResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *JobResponse) GetSignalStr() string {
	if x != nil {
		return x.SignalStr
	}
	return ""
}

func (x *JobResponse) GetCmd() *JobCreateRequest {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *JobResponse) GetStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *JobResponse) GetEnded() *timestamppb.Timestamp {
	if x != nil {
		return x.Ended
	}
	return nil
}

// JobOutputResponse is a message containing the byte stream of job output.
type JobOutputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *JobOutputResponse) Reset() {
	*x = JobOutputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobOutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobOutputResponse) ProtoMessage() {}

func (x *JobOutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobOutputResponse.ProtoReflect.Descriptor instead.
func (*JobOutputResponse) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *JobOutputResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

var File_jobs_proto protoreflect.FileDescriptor

var file_jobs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6a, 0x6f,
	0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1d, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22,
	0x40, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49,
	0x44, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x9b, 0x03, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44,
	0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6a, 0x6f, 0x62, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x12, 0x35,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x6f,
	0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2a, 0x72, 0x0a, 0x08, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4a, 0x4f, 0x42, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x41, 0x50, 0x49, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0xc9,
	0x02, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x6f,
	0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x6a,
	0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x6a, 0x6f,
	0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x6a, 0x6f, 0x62, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobs_proto_rawDescOnce sync.Once
	file_jobs_proto_rawDescData = file_jobs_proto_rawDesc
)

func file_jobs_proto_rawDescGZIP() []byte {
	file_jobs_proto_rawDescOnce.Do(func() {
		file_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobs_proto_rawDescData)
	})
	return file_jobs_proto_rawDescData
}

var file_jobs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_jobs_proto_goTypes = []interface{}{
	(JobState)(0),                 // 0: jobmaster.jobs.v1.JobState
	(*JobID)(nil),                 // 1: jobmaster.jobs.v1.JobID
	(*JobCreateRequest)(nil),      // 2: jobmaster.jobs.v1.JobCreateRequest
	(*JobIDRequest)(nil),          // 3: jobmaster.jobs.v1.JobIDRequest
	(*JobResponse)(nil),           // 4: jobmaster.jobs.v1.JobResponse
	(*JobOutputResponse)(nil),     // 5: jobmaster.jobs.v1.JobOutputResponse
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_jobs_proto_depIdxs = []int32{
	1,  // 0: jobmaster.jobs.v1.JobIDRequest.jobIDRequest:type_name -> jobmaster.jobs.v1.JobID
	1,  // 1: jobmaster.jobs.v1.JobResponse.jobIDResponse:type_name -> jobmaster.jobs.v1.JobID
	0,  // 2: jobmaster.jobs.v1.JobResponse.state:type_name -> jobmaster.jobs.v1.JobState
	2,  // 3: jobmaster.jobs.v1.JobResponse.cmd:type_name -> jobmaster.jobs.v1.JobCreateRequest
	6,  // 4: jobmaster.jobs.v1.JobResponse.started:type_name -> google.protobuf.Timestamp
	6,  // 5: jobmaster.jobs.v1.JobResponse.ended:type_name -> google.protobuf.Timestamp
	2,  // 6: jobmaster.jobs.v1.JobService.Start:input_type -> jobmaster.jobs.v1.JobCreateRequest
	3,  // 7: jobmaster.jobs.v1.JobService.Stop:input_type -> jobmaster.jobs.v1.JobIDRequest
	3,  // 8: jobmaster.jobs.v1.JobService.Status:input_type -> jobmaster.jobs.v1.JobIDRequest
	3,  // 9: jobmaster.jobs.v1.JobService.StreamOutput:input_type -> jobmaster.jobs.v1.JobIDRequest
	1,  // 10: jobmaster.jobs.v1.JobService.Start:output_type -> jobmaster.jobs.v1.JobID
	4,  // 11: jobmaster.jobs.v1.JobService.Stop:output_type -> jobmaster.jobs.v1.JobResponse
	4,  // 12: jobmaster.jobs.v1.JobService.Status:output_type -> jobmaster.jobs.v1.JobResponse
	5,  // 13: jobmaster.jobs.v1.JobService.StreamOutput:output_type -> jobmaster.jobs.v1.JobOutputResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_jobs_proto_init() }
func file_jobs_proto_init() {
	if File_jobs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jobs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobOutputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jobs_proto_goTypes,
		DependencyIndexes: file_jobs_proto_depIdxs,
		EnumInfos:         file_jobs_proto_enumTypes,
		MessageInfos:      file_jobs_proto_msgTypes,
	}.Build()
	File_jobs_proto = out.File
	file_jobs_proto_rawDesc = nil
	file_jobs_proto_goTypes = nil
	file_jobs_proto_depIdxs = nil
}
